---
interface Props {
  email: string;
}

const { email } = Astro.props;
---

<div class="relative group">
  <!-- Botão visual -->
  <div
    class="inline-flex items-center justify-center
        w-full min-w-[280px] min-h-[64px] h-auto py-4 px-6
        text-lg sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl font-medium 
        bg-amber-500 hover:bg-amber-600 text-neutral-900
        rounded-2xl transition-all duration-200 ease-in-out
        hover:shadow-lg hover:shadow-amber-500/20 hover:scale-[1.02]
        active:scale-[0.98] active:shadow-md active:bg-amber-700
        mx-auto text-center
        cursor-pointer email-button
        box-border"
    data-email={email}>

    <!-- Texto do botão -->
    <span
      class="button-text break-all sm:break-normal leading-tight
             transition-opacity duration-200 select-none"
      >{email}</span>

    <!-- Texto hover/touch (inicialmente oculto) -->
    <span
      class="hover-text break-normal leading-tight
             opacity-0 absolute inset-0 flex items-center justify-center
             transition-opacity duration-200 select-none pointer-events-none"
      >Click to copy</span>
  </div>

  <!-- Script de funcionalidade -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const button = document.querySelector(".email-button");
      const buttonText = button?.querySelector(".button-text");
      const hoverText = button?.querySelector(".hover-text");

      if (!button || !buttonText || !hoverText) {
        console.error("Elementos não encontrados");
        return;
      }

      const originalEmail = button.getAttribute("data-email");
      if (!originalEmail) {
        console.error("Email não encontrado");
        return;
      }

      let isCopying = false;

      // Função para mostrar "Click to copy"
      function showClickToCopy() {
        if (!isCopying) {
          buttonText.style.opacity = "0";
          hoverText.style.opacity = "1";
          hoverText.textContent = "Click to copy";
        }
      }

      // Função para mostrar email
      function showEmail() {
        if (!isCopying) {
          buttonText.style.opacity = "1";
          hoverText.style.opacity = "0";
        }
      }

      // Função para mostrar "Copied!"
      function showCopied() {
        isCopying = true;
        buttonText.style.opacity = "0";
        hoverText.style.opacity = "1";
        hoverText.textContent = "Copied!";
      }

      // Desktop: Hover com mouse
      button.addEventListener("mouseenter", showClickToCopy);
      button.addEventListener("mouseleave", showEmail);

      // Mobile: Touch para mostrar instrução
      button.addEventListener("touchstart", function(e) {
        if (!isCopying) {
          showClickToCopy();
          // Auto-hide após 2 segundos se não clicou
          setTimeout(() => {
            if (!isCopying) {
              showEmail();
            }
          }, 2000);
        }
      });

      // Click/Tap para copiar - funciona em ambos
      button.addEventListener("click", async function(e) {
        e.preventDefault();
        if (isCopying) return;
        
        showCopied();

        try {
          await navigator.clipboard.writeText(originalEmail);
        } catch (err) {
          // Fallback para navegadores antigos
          const textArea = document.createElement("textarea");
          textArea.value = originalEmail;
          textArea.style.position = "fixed";
          textArea.style.left = "-9999px";
          textArea.style.opacity = "0";
          document.body.appendChild(textArea);
          textArea.select();
          document.execCommand("copy");
          document.body.removeChild(textArea);
        }

        // Reset após 1.5 segundos
        setTimeout(() => {
          isCopying = false;
          showEmail();
        }, 1500);
      });

      console.log("✅ Email button inicializado");
    });
  </script>
</div>